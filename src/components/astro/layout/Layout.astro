---
import '@/assets/styles/global.css';
import '@/assets/styles/toggle.css';

import { getCollection } from 'astro:content';

import Footer from '@/components/astro/layout/Footer.astro';
import CommandMenu from '@/components/vue/CommandMenu.vue';

export interface Props {
  title: string;
  description: string;
}

const postCollection = await getCollection('posts');
const posts = postCollection
  .filter(post => !post.data.isDraft)
  .sort((a, b) => b.data.publishedAt.getTime() - a.data.publishedAt.getTime())
  .map((collection) => ({
    title: collection.data.title || '',
    href: `/posts/${collection.slug}`,
  }));

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="manifest" href="/manifest.webmanifest" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    <link rel="icon" href="/favicon.ico" sizes="any" />
    <link rel="icon" href="/icon-light.svg" type="image/svg+xml" class=":uno: favicon" />

    <meta property="og:url" content="https://www.namchee.dev/">
    <meta property="og:type" content="website">
    <meta property="og:title" content={title}>
    <meta property="og:description" content={description}>
    <meta property="og:image" content="http://localhost:4321/og.png">

    <!-- Twitter Meta Tags -->
    <meta name="twitter:card" content="summary_large_image">
    <meta property="twitter:domain" content="lakban_hitam">
    <meta property="twitter:url" content="https://www.namchee.dev">
    <meta name="twitter:title" content={title}>
    <meta name="twitter:description" content={description}>
    <meta name="twitter:image" content="/og.png">

    <meta name="description" content={description} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link
      rel="webmention"
      href="https://webmention.io/www.namchee.dev/webmention"
    />
    <link rel="preload" href="/fonts/pretendard.woff2" as="font" type="font/woff2" crossorigin>
    <script is:inline>
      const docEl = document.documentElement;
      const svgIcon = document.querySelector('.favicon');
      const media = window.matchMedia('(prefers-color-scheme: dark)');

      const theme = (() => {
        if (
          typeof window.localStorage !== 'undefined' &&
          window.localStorage.getItem('theme')
        ) {
          return window.localStorage.getItem('theme');
        }

        return media.matches ? 'dark' : 'light';
      })();

      const toggleTheme = (theme) => {
        const method = theme === 'light' ? 'remove' : 'add';

        docEl.classList[method]('dark');
        svgIcon.href = theme === 'light' ? '/icon-light.svg' : '/icon-dark.svg';
        window.localStorage.setItem('theme', theme);
      };

      toggleTheme(theme);
    </script>
    <title>{title}</title>
  </head>
  <body
    class=":uno: bg-background transition-colors text-content flex flex-col font-sans min-h-screen antialiased"
  >
    <CommandMenu posts={posts} client:load />
    <main class=":uno: w-full max-w-7xl mx-auto flex-1">
      <slot />
    </main>
    <Footer />
  </body>
</html>

<script>
  console.log(`
               â–„â–ˆâ–ˆâ–ˆâ–„â–„â–ˆâ–ˆâ–ˆâ–„
                 â–„â–ˆâ–€â–€â–ˆâ–ˆ
        â–„â–ˆ      â–ˆâ–ˆ    â–€â–ˆ      â–ˆâ–Œ
       â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–„â–ˆâ–ˆ      â–ˆâ–ˆâ–„â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ
      â–ˆâ–ˆâ–ˆ      â–€â–ˆâ–ˆ    â–„â–ˆâ–€      â–ˆâ–ˆâ–ˆ
     â–ˆâ–€ â–ˆâ–Œ      â–€â–ˆâ–ˆ  â–ˆâ–ˆâ–€      â–„â–ˆ â–€â–ˆ
         â–ˆâ–ˆâ–„     â–„â–ˆâ–ˆâ–ˆâ–ˆâ–Œ     â–„â–ˆâ–ˆ
          â–ˆâ–ˆâ–€â–€â–ˆâ–ˆâ–€â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–€â–ˆâ–ˆâ–€â–€â–ˆâ–ˆ
     â–„  â–ˆâ–ˆ       â–ˆâ–ˆâ–€â–€â–ˆâ–ˆ       â–ˆâ–Œ â–„
     â–ˆâ–ˆâ–ˆâ–ˆ       â–ˆâ–ˆâ–€  â–€â–ˆâ–ˆ       â–ˆâ–ˆâ–ˆ
       â–ˆâ–ˆâ–ˆâ–„â–„â–„â–„â–ˆâ–ˆâ–ˆ      â–ˆâ–ˆâ–ˆâ–„â–„â–„â–„â–ˆâ–ˆâ–ˆ
        â–ˆâ–ˆ      â–ˆ      â–ˆ      â–ˆâ–ˆ
         â–€      â–€â–ˆâ–„  â–„â–ˆâ–€      â–€
               â–„â–„â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–„â–„

        Hey there developers ðŸ¤“!
    There's nothing here, so scram!
`);
</script>
