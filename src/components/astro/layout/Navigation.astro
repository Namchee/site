---
import Home from "~icons/lucide/home";
import Newspaper from "~icons/lucide/newspaper";
import LibraryBig from "~icons/lucide/library-big";
import Cog from "~icons/lucide/cog";

import NavigationItem from "@/components/vue/NavigationItem.vue";
import CommandMenu from "@/components/vue/CommandMenu.vue";
import ThemeSwitcher from "@/components/vue/ThemeSwitcher.vue"

interface Props {
  posts: { title: string; href: string }[];
}

const links = [
  {
    href: "/",
    label: "Home",
    icon: Home,
    key: "Home",
  },
  {
    href: "/posts",
    label: "Posts",
    icon: Newspaper,
  },
  {
    href: "/library",
    label: "Library",
    icon: LibraryBig,
  },
  {
    href: "/colophon",
    label: "Colophon",
    icon: Cog,
  },
];

const directLinks = links.slice(0, -1);

const currentPath = Astro.url.pathname;
const { posts } = Astro.props;
---

<nav
  class=":uno: flex fixed transition-colors border shadow-lg rounded-md bottom-8 left-1/2 translate-x-[-50%] dark:bg-[var(--navigation)] border-separator bg-background z-20"
>
  {
    directLinks.map((link, idx) => (
      <NavigationItem
        label={link.label}
        className={`${idx === 0 ? "ml-1" : ""} ${currentPath.match(`${link.href}/.?`) || currentPath === link.href ? "text-heading bg-surface-2" : ""}`.trim()}
        href={link.href}
        client:load
      >
        <link.icon class=":uno: w-5 h-auto" />
      </NavigationItem>
    ))
  }

  <div class=":uno: w-[0.5px] bg-separator dark:bg-[var(--navigation-separator)] transition-colors"></div>

  <CommandMenu posts={posts} links={links} client:load />

  <ThemeSwitcher client:visible />
</nav>

<script is:inline>
  const button = document.querySelector(".theme-toggle");
  function toggleThemeSwitcher() {
    button.classList.toggle("theme-toggle--toggled");
  }

  if (theme === "dark") {
    button.classList.add("theme-toggle--toggled");
  }

  button.addEventListener("click", () => {
    const newTheme = docEl.classList.contains("dark") ? "light" : "dark";
    toggleThemeSwitcher();
    toggleTheme(newTheme);
  });

  window.addEventListener("storage", () => {
    const newTheme = window.localStorage.getItem("theme");
    toggleThemeSwitcher();
    toggleTheme(newTheme);
  });

  media.addEventListener("change", () => {
    const newTheme = media.matches ? "dark" : "light";
    toggleThemeSwitcher();
    toggleTheme(newTheme);
  });
</script>
