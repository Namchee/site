---
import Callout from './Callout.astro';

const slot = await Astro.slots.render('default');
const raw = slot.trim();

// Trim wrapping ``` and split lines
const lines = raw.slice(3, -4).split('\n');

const calloutVariants = ['note', 'warning', 'danger'] as const;

const firstLine = lines[0];
const isAttribution = firstLine.startsWith('[');
const isCallout = firstLine[1] === '!'
  && calloutVariants.includes(firstLine.slice(2, -1).trim().toLowerCase() as typeof calloutVariants[number]);

const actualContent = isAttribution ? lines.slice(1).join('\n') : lines.join('\n');

let author = '';
let material = '';

if (isAttribution) {
  const attribution = firstLine.slice(1, -1).trim();
  [author, material = ''] = attribution.split(',').map(s => s.trim());
}
---

{isCallout
  ? (
    <Callout variant={firstLine.slice(2, -1).trim().toLowerCase() as typeof calloutVariants[number]} set:html={actualContent} />
  )
  : (
    <blockquote class=":uno: my-4!">
      <p
        class:list={[
          'text-heading/80',
          'font-serif',
          'text-lg md:text-xl',
          'transition-colors',
          'leading-normal',
          isAttribution
          && 'before:content-[\'“\'] before:ml-[-12px] before:mr-[1px] after:content-[\'”\'] after:ml-[1px]',
        ]}
        set:html={actualContent}
      />

      {(author || material) && (
        <div class="text-xs leading-tight font-medium ml-auto mt-4 flex w-3/5 items-center md:w-1/2">
          <div class="mr-2 bg-separator flex-1 h-px transition-colors" />
          {author && <span class="text-heading/80 transition-colors">{author}</span>}
          {material && <span class="text-content/80 transition-colors">, {material}</span>}
        </div>
      )}
    </blockquote>
  )}
