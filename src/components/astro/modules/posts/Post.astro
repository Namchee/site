---
import type { CollectionEntry } from 'astro:content';

import type { MarkdownFile } from '@/plugins/remark/types';

import History from '~icons/lucide/history';
import PencilLine from '~icons/lucide/pencil-line';
import Timer from '~icons/lucide/timer';

import Badge from '@/components/astro/ui/Badge.astro';
import BackToTop from '@/components/vue/BackToTop.vue';
import MobileToC from '@/components/vue/MobileTableOfContents.vue';

import BackButton from './BackButton.astro';
import SocialLinks from './SocialLinks.astro';
import TableOfContents from './TableOfContents.astro';

import '@/assets/styles/shiki.css';
import '@/assets/styles/tweet.css';

interface Props {
  frontmatter: CollectionEntry<'posts'>['data']
    & MarkdownFile['data']['astro']['frontmatter'] & {
      slug: string;
    };
}

const { frontmatter } = Astro.props;

const publishedAt = frontmatter.publishedAt;
const lastModified = frontmatter.lastModified || publishedAt;
---

<article class=":uno: gap-4 grid grid-cols-12">
  <MobileToC headings={frontmatter.headings} client:visible />

  <TableOfContents headings={frontmatter.headings} />

  <BackToTop client:load />

  <header class=":uno: col-start-1 col-end-13 md:col-start-2 md:col-end-12">
    <BackButton />

    <h1
      class=":uno: text-xl text-heading tracking-tight font-semibold mt-8 transition-colors md:text-2xl"
    >
      {frontmatter.title}
    </h1>

    <div class=":uno: mt-2 flex space-x-4 md:mt-4">
      <div
        class=":uno: text-sm flex items-center space-x-2"
        title={`Published At ${new Date(publishedAt).toDateString()}`}
      >
        <PencilLine class=":uno: h-auto w-4" />

        <time
          datetime={frontmatter.publishedAt as unknown as string}
          class=":uno: font-medium block"
        >
          {
            new Date(publishedAt).toLocaleString('en-GB', {
              year: 'numeric',
              month: 'long',
              day: 'numeric',
            })
          }
        </time>
      </div>

      <div
        class=":uno: text-sm hidden items-center space-x-2 md:flex"
        title={`Last Modified ${new Date(lastModified).toDateString()}`}
      >
        <History class=":uno: h-auto w-4" />

        <time
          datetime={frontmatter.lastModified as unknown as string}
          class=":uno: font-medium block"
        >
          {
            new Date(lastModified).toLocaleString('en-GB', {
              year: 'numeric',
              month: 'long',
              day: 'numeric',
            })
          }
        </time>
      </div>

      <div
        class=":uno: text-sm flex items-center space-x-2 md:ml-auto!"
        title={`${frontmatter.timeToRead} minutes read`}
      >
        <Timer class=":uno: h-auto w-4" />

        <p class=":uno: font-medium">
          {frontmatter.timeToRead} minutes read
        </p>
      </div>
    </div>
  </header>

  <div
    class=":uno: mt-8 flex flex-col gap-4 col-start-1 col-end-13 overflow-x-visible md:col-start-2 md:col-end-12"
  >
    <slot />
  </div>

  <section
    class=":uno: mt-16 flex gap-4 col-start-1 col-end-13 justify-between md:col-start-2 md:col-end-12"
  >
    <div>
      <p class=":uno: text-sm leading-normal font-semibold mb-5 md:text-base">
        Share this Post
      </p>

      <SocialLinks slug={frontmatter.slug} title={frontmatter.title} />
    </div>

    <div>
      <p
        class=":uno: text-sm leading-normal font-semibold mb-5 text-right md:text-base"
      >
        Tags
      </p>

      <div class=":uno: flex flex-wrap gap-2 justify-end">
        {
          frontmatter.tags.map(tag => (
            <Badge>{tag[0].toUpperCase() + tag.slice(1)}</Badge>
          ))
        }
      </div>
    </div>
  </section>
</article>
