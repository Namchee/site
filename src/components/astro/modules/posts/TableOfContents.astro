---
import type { MarkdownHeading } from 'astro';

import { Icon } from 'astro-iconify';

import AppLink from '@/components/astro/ui/AppLink.astro';

import generateToC from '@/scripts/toc';

import ToCList from './TocList.astro';

interface Props {
  headings: MarkdownHeading[];
}

const { headings } = Astro.props;
const tocList = generateToC(headings);
---

<nav class="flex flex-col sticky top-24 bottom-0 bg-surface p-4 rounded-md md:bg-transparent md:p-0 mb-8 md:mb-0">
  <p class="mb-4 font-semibold text-heading transition-colors">
    In this post
  </p>

  <ToCList headings={tocList} />

  <AppLink href="#" class="md:flex md:items-center space-x-2 mt-8 text-heading hidden transition-colors backToTop__button">
    <Icon pack="lucide" name="corner-left-up" class="w-4 h-auto" />
    <span>Back to Top</span>
  </AppLink>
</nav>

<script>
  const backToTop = document.querySelector('.backToTop__button');
  backToTop.addEventListener('click', () => {
    window.scrollTo(0, 0);
  });

  const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      const id = entry.target.id;
      if (entry.intersectionRatio > 0) {
        document.querySelector(`nav ul li a[href="#${id}"]`).classList.add('text-primary', 'font-medium')
      } else {
        document.querySelector(`nav ul li a[href="#${id}"]`).classList.remove('text-primary', 'font-medium')
      }
    });
  });

  const tocLinks = document.querySelectorAll('h2[id], h3[id]');
  tocLinks.forEach(link => observer.observe(link));
</script>
