---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import type { MarkdownFile } from "@/plugins/remark/types";

import Layout from "@/components/astro/layout/Layout.astro";

import BackButton from './BackButton.astro';
import TableOfContents from "./TableOfContents.astro";
import TextLink from '../../ui/TextLink.astro';
import AppLink from '../../ui/AppLink.astro';

interface Props {
  frontmatter: CollectionEntry<"posts">["data"] &
    MarkdownFile["data"]["astro"]["frontmatter"];
}

const { frontmatter } = Astro.props;
---

<Layout
  title={`${frontmatter.title} â€” Namchee`}
  description={frontmatter.subtitle}
>
  <BackButton />

  <article class="relative grid grid-cols-12 gap-4 my-24 px-8 lg:my-32 lg:px-0">
    <header class="col-start-1 col-end-13 text-center">
      <h1 class="text-3xl
        text-heading
        font-medium
        md:text-4xl">
        {frontmatter.title}
      </h1>

      <p class="md:text-lg text-balance mt-4 md:mt-6">
        {frontmatter.subtitle}
      </p>

      <p class="text-sm md:text-base font-medium text-primary mt-8 md:mt-12">
        {
          new Date(frontmatter.publishedAt).toLocaleString("en-GB", {
            year: "numeric",
            month: "long",
            day: "numeric",
          })
        } &mdash; {frontmatter.timeToRead} minutes read
      </p>
    </header>

    <figure
      class="col-start-1 col-end-13
        my-8
        md:mb-16 md:col-start-2 md:col-end-12"
    >
      <Image
        src={frontmatter.image.url}
        alt={frontmatter.title}
        width={1064}
        height={599}
        class="rounded-lg aspect-video"
      />
      <figcaption class="italic text-accent text-xs text-center mt-4">
        Image courtesy of {frontmatter.image.author} from {
          frontmatter.image.source
        }
      </figcaption>
    </figure>

    <div class="hidden
      lg:block lg:col-start-3 lg:col-end-5">
      <TableOfContents headings={frontmatter.headings} />
    </div>

    <section
      class="col-start-1 col-end-13
        space-y-6
        md:col-start-2 md:col-end-12
        lg:ml-4 lg:col-start-5 lg:col-end-11"
    >
      <slot />
    </section>

    <section class="col-start-1 col-end-13
      flex flex-col gap-6 mt-16
      md:col-start-2 md:col-end-12
      lg:col-start-3 lg:col-end-11">
      <div class="flex items-center justify-between">
        <div class="flex space-x-2">
          {frontmatter.tags.map(tag =>
            <div class="grid place-items-center rounded-full text-xs bg-surface py-1 px-2 transition-colors">
              <span class="mt-[2px]">{tag[0].toUpperCase() + tag.slice(1)}</span>
            </div>
          )}
        </div>

        <p class="text-sm">
          <AppLink class="text-heading font-medium">Tweet this post</AppLink>
        </p>
      </div>

      <hr class="border-separator" />
    </section>
  </article>
</Layout>

<style is:inline>
  p {
    line-height: 1.75;
  }
</style>

<script is:inline>
  const copyButton = document.querySelector(".copy__link");
  copyButton.addEventListener("click", async () => {
    const url = window.location.href.split("#")[0];

    await navigator.clipboard.writeText(url);
  });
</script>
