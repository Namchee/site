---
import { Icon } from "astro-icon/components";

import type { CollectionEntry } from "astro:content";
import type { MarkdownFile } from "@/plugins/remark/types";

import Layout from "@/components/astro/layout/Layout.astro";
import Badge from "@/components/astro/ui/Badge.astro";

import BackButton from "./BackButton.astro";
import TableOfContents from "./TableOfContents.astro";
import Webmention from "./Webmentions.astro";
import SocialLinks from "./SocialLinks.astro";

interface Props {
  frontmatter: CollectionEntry<"posts">["data"] &
    MarkdownFile["data"]["astro"]["frontmatter"] & {
      slug: string;
    };
}

const { frontmatter } = Astro.props;

const publishedAt = frontmatter.publishedAt;
const lastModified = !!frontmatter.lastModified ? frontmatter.lastModified : publishedAt;
---

<Layout
  title={`${frontmatter.title} â€” Namchee`}
  description={frontmatter.subtitle}
  og={`posts/og-${frontmatter.slug}`}
>
  <progress class=":uno: fixed w-screen z-10 reading__progress h-[2px] left-0"
  ></progress>

  <BackButton />

  <article class=":uno: grid grid-cols-12 px-8 gap-x-4 lg:px-0 my-32">
    <h1
      class=":uno: text-heading font-semibold col-start-1 col-end-13 md:col-start-5 lg:col-end-12 xl:col-end-11 mb-4 md:mb-8 text-2xl md:text-3xl"
    >
      {frontmatter.title}
    </h1>

    <section
      class=":uno: col-start-1 col-end-13 md:col-end-5 lg:col-start-2 lg:col-end-5 xl:col-start-3"
    >
      <div
        class="space-y-0 md:space-y-2 mb-12 md:mb-16 flex md:flex-col items-center md:items-start"
      >
        <div
          class="flex items-center space-x-[6px] md:space-x-2 text-xs md:text-sm"
          title={`Published At ${new Date(publishedAt).toDateString()}`}
        >
          <Icon name="lucide:pencil-line" class="w-4 h-auto" />

          <time
            datetime={frontmatter.publishedAt as unknown as string}
            class=":uno: text-heading font-medium block"
          >
            {
              new Date(publishedAt).toLocaleString("en-GB", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            }
          </time>
        </div>

        <div
          class="items-center space-x-[6px] md:space-x-2 text-xs md:text-sm sm:flex ml-4 md:ml-unset hidden"
          title={`Last Modified ${new Date(lastModified).toDateString()}`}
        >
          <Icon name="lucide:history" class="w-4 h-auto" />

          <time
            datetime={frontmatter.lastModified as unknown as string}
            class=":uno: text-heading font-medium block"
          >
            {
              new Date(lastModified).toLocaleString("en-GB", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            }
          </time>
        </div>

        <div
          class="flex items-center space-x-[6px] md:space-x-2 text-xs md:text-sm md:ml-unset ml-auto"
          title={`${frontmatter.timeToRead} minutes read`}
        >
          <Icon name="lucide:timer" class="w-4 h-auto" />

          <p class="text-heading font-medium">
            {frontmatter.timeToRead} minutes
          </p>
        </div>
      </div>

      <TableOfContents headings={frontmatter.headings} />
    </section>

    <section
      class=":uno: col-start-1 col-end-13 lg:col-end-12 xl:col-end-11 md:col-start-5 leading-[1.75] space-y-4"
    >
      <slot />
    </section>

    <section
      class=":uno: col-start-1 col-end-13 md:col-end-5 lg:col-start-2 lg:col-end-5 xl:col-start-3 mx-auto mt-16 md:mx-unset"
    >
      <p
        class=":uno: text-center text-heading font-medium text-sm leading-normal md:text-base mb-5 md:text-left"
      >
        Tags
      </p>

      <div class=":uno: flex flex-wrap gap-2">
        {
          frontmatter.tags.map((tag) => (
            <Badge>{tag[0].toUpperCase() + tag.slice(1)}</Badge>
          ))
        }
      </div>
    </section>

    <section
      class=":uno: flex col-start-1 col-end-13 lg:col-end-12 xl:col-end-11 md:col-start-5 justify-between mt-16"
    >
      <div>
        <p
          class=":uno: text-heading font-medium text-sm leading-normal md:text-base mb-5"
        >
          Share this Post
        </p>

        <SocialLinks slug={frontmatter.slug} title={frontmatter.title} />
      </div>

      <div>
        <p
          class=":uno: text-sm md:text-base text-heading font-medium mb-5 text-right"
        >
          Webmentions
        </p>

        <Webmention slug={frontmatter.slug} />
      </div>
    </section>
  </article>
</Layout>

<style>
  .reading__progress::-webkit-progress-bar {
    background-color: oklch(var(--background));
  }
  .reading__progress::-webkit-progress-value {
    background-color: oklch(var(--primary));
  }

  .reading__progress::-moz-progress-bar {
    background-color: oklch(var(--primary));
  }
</style>

<script>
  const progressBar = document.querySelector(".reading__progress");

  const windowHeight = window.innerHeight;
  const documentHeight = document.documentElement.scrollHeight;
  const max = documentHeight - windowHeight;
  progressBar.setAttribute("max", max.toString());

  window.addEventListener("scroll", () => {
    progressBar.setAttribute("value", window.scrollY.toString());
  });

  const backToTop = document.querySelector(".backToTop__button");
  backToTop.addEventListener("click", () => {
    window.scrollTo(0, 0);
  });
</script>
