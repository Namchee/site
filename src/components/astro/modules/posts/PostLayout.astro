---
import { Image } from "@unpic/astro";

import type { CollectionEntry } from "astro:content";
import type { MarkdownFile } from "@/plugins/remark/types";

import Layout from "@/components/astro/layout/Layout.astro";

import BackButton from "./BackButton.astro";
import TableOfContents from "./TableOfContents.astro";
import Webmention from "./Webmention.astro";
import SocialLinks from "./SocialLinks.astro";

interface Props {
  frontmatter: CollectionEntry<"posts">["data"] &
    MarkdownFile["data"]["astro"]["frontmatter"] & {
      slug: string;
      prevPost: CollectionEntry<"posts">;
      nextPost: CollectionEntry<"posts">;
    };
}

const { frontmatter } = Astro.props;
---

<Layout
  title={`${frontmatter.title} â€” Namchee`}
  description={frontmatter.subtitle}
>
  <progress class="reading__progress h-[2px] fixed w-screen left-0 z-10"
  ></progress>

  <BackButton />

  <article
    class="relative grid grid-cols-12 gap-x-4 my-32 px-8 lg:my-32 lg:px-0"
  >
    <header
      class="col-start-1 col-end-13 lg:col-start-2 lg:col-end-12 xl:col-start-3 xl:col-end-11"
    >
      <h1
        class="text-xl
        text-heading
        font-semibold
        tracking-tight"
      >
        {frontmatter.title}
      </h1>

      <p class="mt-1 font-medium text-sm md:text-base leading-normal">
        {frontmatter.subtitle}
      </p>

      <div class="flex justify-between items-end mt-8">
        <p class="text-sm md:text-base text-primary font-medium">
          {new Date(frontmatter.publishedAt).toLocaleString("en-GB", {
            year: "numeric",
            month: "long",
            day: "numeric",
          })} &bull; {frontmatter.timeToRead} minutes read
        </p>

        <div class="hidden lg:block">
          <Webmention slug={frontmatter.slug} />
        </div>
      </div>
    </header>

    <figure
      class="col-start-1 col-end-13
        my-8
        md:mb-16 lg:col-start-2 lg:col-end-12 xl:col-start-3 xl:col-end-11"
    >
      <Image
        src={frontmatter.image.url}
        alt={`${frontmatter.title} - by ${frontmatter.image.author}`}
        title={frontmatter.title}
        aspectRatio={16 / 9}
        layout="fullWidth"
        class="rounded-md aspect-video"
        loading="eager"
        background="blurhash"
      />
      <figcaption class="italic text-xs text-center mt-4">
        Image courtesy of {frontmatter.image.author} from {
          frontmatter.image.source
        }
      </figcaption>
    </figure>

    <div
      class="col-start-1 col-end-13 lg:col-start-2 md:col-end-5 xl:col-start-3"
    >
      <TableOfContents headings={frontmatter.headings} />
    </div>

    <section
      class="col-start-1 col-end-13
        space-y-4
        md:col-start-5
        lg:col-end-12
        xl:col-end-11
        leading-[1.75]"
    >
      <slot />
    </section>

    <section
      class="mt-16 col-start-1 col-end-13 lg:col-start-2 md:col-end-5 xl:col-start-3"
    >
      <p class="font-medium">Share this post</p>

      <SocialLinks slug={frontmatter.slug} title={frontmatter.title} />
    </section>

    <section
      class="mt-16
        col-start-1 col-end-13
        justify-self-end
        md:col-start-5 md:col-end-12
        md:justify-self-start
        lg:col-start-5
        xl:col-end-11"
    >
      <p class="text-right md:text-left">
        Tags
      </p>

      <div class="flex space-x-2 mt-6">
        {
          frontmatter.tags.map((tag) => (
            <div class="grid place-items-center rounded-full text-xs bg-primary/10 dark:bg-primary/15 text-primary py-1 px-2 transition-colors">
              <span>{tag[0].toUpperCase() + tag.slice(1)}</span>
            </div>
          ))
        }
      </div>
    </section>
  </article>
</Layout>

<style is:inline>
  .reading__progress::-webkit-progress-bar {
    background-color: transparent;
  }
  .reading__progress::-webkit-progress-value {
    background-color: oklch(var(--primary));
  }

  .reading__progress::-moz-progress-bar {
    background-color: oklch(var(--primary));
  }
</style>

<script is:inline>
  const progressBar = document.querySelector(".reading__progress");

  const windowHeight = window.innerHeight;
  const documentHeight = document.documentElement.scrollHeight;
  const max = documentHeight - windowHeight;
  progressBar.setAttribute("max", max);

  function copyLink() {
    navigator.clipboard.writeText(
      window.location.origin + window.location.pathname,
    );
  }

  window.addEventListener("scroll", () => {
    progressBar.setAttribute("value", window.scrollY);
  });
</script>
