---
import type { Webmention } from '@/scripts/webmentions';

import { existsSync, readFileSync } from 'node:fs';
import { resolve } from 'node:path';

import HandHeart from '~icons/lucide/hand-heart';
import MessageSquareText from '~icons/lucide/message-square-text';
import Repeat from '~icons/lucide/repeat-2';

interface Props {
  slug: string;
}

const { slug } = Astro.props;

let webMentions: Webmention[] = [];

const wmPath = resolve(process.cwd(), 'data', 'webmentions', `${slug}.json`);
if (existsSync(wmPath)) {
  webMentions = JSON.parse(
    readFileSync(wmPath).toString('utf-8'),
  ) as Webmention[];
}

const likes = webMentions.filter(
  mention => mention['wm-property'] === 'like-of',
);
const reposts = webMentions.filter(
  mention => mention['wm-property'] === 'repost-of',
);
const replies = webMentions.filter(mention =>
  ['in-reply-to', 'mention-of'].includes(mention['wm-property']));

const numberFormatter = Intl.NumberFormat('id-ID');
---

<div class=":uno: flex items-center space-x-4">
  <div
    class=":uno: flex items-center space-x-2 md:text-lg"
    title="Number of likes for this post"
  >
    <HandHeart class=":uno: h-auto w-4 md:w-[18px]" />
    <span class=":uno: leading-none!"
    >{numberFormatter.format(likes.length)}</span
    >
  </div>

  <div
    class=":uno: leading-none flex items-center space-x-2 md:text-lg"
    title="Number of reposts"
  >
    <Repeat class=":uno: h-auto w-4 md:w-[18px]" />
    <span class=":uno: leading-none!"
    >{numberFormatter.format(reposts.length)}</span
    >
  </div>

  <div
    class=":uno: leading-none flex items-center space-x-2 md:text-lg"
    title="Number of replies and comments"
  >
    <MessageSquareText class=":uno: h-auto w-4 md:w-[18px]" />
    <span class=":uno: leading-none!"
    >{numberFormatter.format(replies.length)}</span
    >
  </div>
</div>
