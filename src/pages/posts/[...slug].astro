---
import { getCollection, render, type CollectionEntry } from "astro:content";

import PostLayout from "@/components/astro/modules/posts/PostLayout.astro";

import TextLink from "@/components/astro/ui/TextLink.astro";
import Head2 from "@/components/astro/modules/posts/html/Head2.astro";
import Head3 from "@/components/astro/modules/posts/html/Head3.astro";
import Strong from "@/components/astro/modules/posts/html/Strong.astro";
import Image from "@/components/astro/modules/posts/html/Image.astro";
import CodeSnippet from "@/components/astro/modules/posts/html/CodeSnippet.astro";
import Quote from "@/components/astro/modules/posts/html/Quote.astro";
import BulletItem from "@/components/astro/modules/posts/html/BulletItem.astro";
import UnorderedList from "@/components/astro/modules/posts/html/UnorderedList.astro";

import type { MarkdownFile } from "@/plugins/remark/types";

type FrontmatterData = CollectionEntry<"posts">["data"];
type FrontmatterAddons = MarkdownFile["data"]["astro"]["frontmatter"];

export async function getStaticPaths() {
  const posts = await getCollection("posts");

  return posts.map(entry => ({
    params: {
      slug: entry.slug,
    },
    props: {
      entry,
    },
  }));
}

const { entry } = Astro.props;
const { Content, remarkPluginFrontmatter, headings } = await render(entry);

const frontmatter = {
  ...(remarkPluginFrontmatter as FrontmatterData & FrontmatterAddons),
  headings,
  slug: Astro.params.slug,
};
---

<PostLayout frontmatter={frontmatter}>
  <Content
    components={{
      a: TextLink,
      h2: Head2,
      h3: Head3,
      strong: Strong,
      img: Image,
      pre: CodeSnippet,
      blockquote: Quote,
      li: BulletItem,
      ul: UnorderedList,
    }}
  />
</PostLayout>
