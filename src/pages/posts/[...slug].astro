---
import { getCollection, type CollectionEntry } from "astro:content";

import PostLayout from "@/components/astro/modules/posts/PostLayout.astro";

import type { MarkdownFile } from "@/plugins/remark/types";

type FrontmatterData = CollectionEntry<"posts">["data"];
type FrontmatterAddons = MarkdownFile["data"]["astro"]["frontmatter"];

export async function getStaticPaths() {
  const posts = await getCollection("posts");

  function sortPostByDate(
    a: { data: FrontmatterData },
    b: { data: FrontmatterData },
  ) {
    return (
      new Date(b.data.publishedAt).getTime() -
      new Date(a.data.publishedAt).getTime()
    );
  }

  return posts.sort(sortPostByDate).map((entry, idx) => ({
    params: {
      slug: entry.slug,
    },
    props: {
      entry,
      prevPost: idx + 1 === posts.length ? undefined : posts[idx + 1],
      nextPost: idx === 0 ? undefined : posts[idx - 1],
    },
  }));
}

const { entry, prevPost, nextPost } = Astro.props;
const { Content, remarkPluginFrontmatter, headings } = await entry.render();

const frontmatter = {
  ...(remarkPluginFrontmatter as FrontmatterData & FrontmatterAddons),
  headings,
  slug: entry.slug,
  prevPost,
  nextPost,
};
---

<PostLayout frontmatter={frontmatter}>
  <Content />
</PostLayout>
