---
import { getCollection } from "astro:content";

import Layout from "@/components/astro/layout/Layout.astro";
import AppLink from "@/components/astro/ui/AppLink.astro";
import Badge from "@/components/astro/ui/Badge.astro";

const posts = (await getCollection("posts"))
  .filter((post) => !post.data.isDraft)
  .sort((a, b) => b.data.publishedAt.getTime() - a.data.publishedAt.getTime());

const title = "My Personal Thoughts â€” Namchee";
const description =
  "Food for thoughts or just passing whims in form of well-written posts that covers various topics.";
---

<Layout title={title} description={description} og="og-posts">
  <div class=":uno: grid grid-cols-12 gap-4 my-16 lg:my-32 px-8">
    <header
      class=":uno: col-start-1 col-end-13 md:col-end-5 lg:col-start-2 lg:col-end-5 xl:col-start-3"
    >
      <div class=":uno: sticky top-12">
        <h1
          class=":uno: text-heading font-semibold transition-colors text-2xl tracking-tight"
        >
          Posts
        </h1>
      </div>
    </header>

    <div
      class=":uno: col-start-1 col-end-13 mt-8 md:mt-0 md:mt-0 md:col-start-6 lg:col-start-6 lg:col-end-12 xl:col-end-11 space-y-16"
    >
      <ul class=":uno: space-y-8">
        {
          posts.map((post) => (
            <li>
              <AppLink
                href={`/posts/${post.slug}`}
                class=":uno: text-heading font-semibold transition-colors hover:text-primary focus:text-primary"
              >
                {post.data.title}
              </AppLink>

              <p class=":uno: transition-colors text-sm leading-relaxed mt-1">
                {post.data.subtitle}
              </p>

              <div class=":uno: items-center text-xs flex space-x-4 mt-4">
                <time>
                  {new Date(post.data.publishedAt).toLocaleString("en-GB", {
                    year: "numeric",
                    month: "long",
                    day: "numeric",
                  })}
                </time>

                <div>
                  {post.data.tags.map((tag) => (
                    <Badge variant="content">
                      {tag[0].toUpperCase() + tag.slice(1)}
                    </Badge>
                  ))}
                </div>
              </div>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</Layout>
